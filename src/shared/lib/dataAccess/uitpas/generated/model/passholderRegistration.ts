/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * UiTPAS API
 * With UiTPAS API 4.0 you can retrieve ticket prices and register ticket sales for passholders. You can also save UiTPAS points and exchange them for rewards for a passholder, and much more.
 * OpenAPI spec version: 4.0
 */
import type { PassholderRegistrationAddress } from './passholderRegistrationAddress';
import type { PassholderRegistrationGender } from './passholderRegistrationGender';
import type { PassholderRegistrationOptInPreferences } from './passholderRegistrationOptInPreferences';
import type { Organizer } from './organizer';
import type { PassholderRegistrationRegistrationSocialTariff } from './passholderRegistrationRegistrationSocialTariff';

/**
 * Registration request of a passholder, mainly used in the online order flow.

A `PassholderRegistration` is not yet `Passholder` but one can be created (e.g. when the order is paid) using the information from the `PassholderRegistration`.
 */
export interface PassholderRegistration {
  /** Address that the passholder to register lives at. Always present in responses. Passholders living outside of Belgium (usually near the border) will only have a `postalCode` and `city` in their address. */
  address: PassholderRegistrationAddress;
  /** This field is always available in responses. */
  readonly creationDate?: string;
  /** Date that the passholder to register was born. */
  dateOfBirth: string;
  /** Contact email address of the passholder to register */
  email?: string;
  /** First name of the passholder to register. */
  firstName: string;
  /** Gender of the passholder to register. */
  gender?: PassholderRegistrationGender;
  /** ID of the PassholderRegistation. **Note:** This is not same as the later `Passholder` id. This field is always available in responses. */
  readonly id?: string;
  /** Unique national (Belgian) INSZ number of an individual passholder. */
  inszNumber?: string;
  /** Set to true for passholders that received legal terms digitally. */
  legalTermsDigital?: boolean;
  /** Set to true for passholders that received legal terms on paper. */
  legalTermsPaper?: boolean;
  /** Last name of the passholder to register. */
  name: string;
  /** Permissions that the passholder has given to be contacted. */
  optInPreferences?: PassholderRegistrationOptInPreferences;
  /** Set to true for under-aged passholder that have parental consent. */
  parentalConsent?: boolean;
  /** Phone number of the passholder to register, for example for SMS alerts. */
  phoneNumber?: string;
  /** Set to the id of the card system of which the passholder has to become a member. */
  registrationCardSystemId?: number;
  registrationOrganizer: Organizer;
  /** Optional request for social tariff */
  registrationSocialTariff?: PassholderRegistrationRegistrationSocialTariff;
  /** Price reduction voucher. */
  registrationVoucher?: string;
}
