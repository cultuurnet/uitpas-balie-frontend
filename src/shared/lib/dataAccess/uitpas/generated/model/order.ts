/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * UiTPAS API
 * With UiTPAS API 4.0 you can retrieve ticket prices and register ticket sales for passholders. You can also save UiTPAS points and exchange them for rewards for a passholder, and much more.
 * OpenAPI spec version: 4.0
 */
import type { PassholderRegistration } from './passholderRegistration';
import type { OrderStatus } from './orderStatus';

/**
 * Order object
 */
export interface Order {
  /** Custom token that can be used for a limited number of time to request this order using `GET /orders/id` without any further authentication. */
  readonly customToken?: string;
  /** Email of the orderer. This property is always present in responses. */
  readonly email?: string;
  /** Optional list of extra passholders in the order */
  extraPassholderRegistrations?: PassholderRegistration[];
  /** ID of the order. This property is always present in responses. */
  readonly id?: string;
  mainPassholderRegistration: PassholderRegistration;
  /** Payment URL (only when status is `PENDING_PAYMENT`) */
  readonly paymentUrl?: string;
  /** Where to redirect after payment is cancelled. Extra query params `orderId` and `customToken` are added to this URL when used to redirect the user, so the receiving client can `GET` the latest status of the order. */
  redirectUrlAfterCancelPayment?: string;
  /** Where to redirect after payment. Extra query params `orderId` and `customToken` are added to this URL when used to redirect the user, so the receiving client can `GET` the latest status of the order. */
  redirectUrlAfterPayment?: string;
  /** Optional registration token. If this order is `PENDING_UITID_CONNECT` this field is present to allow for easy UiTiD account linking. */
  readonly registrationToken?: string;
  /** Status of the order. This property is always present in responses. */
  readonly status?: OrderStatus;
  /** Total price of the order. This property is always present in responses. */
  readonly totalPrice?: number;
}
